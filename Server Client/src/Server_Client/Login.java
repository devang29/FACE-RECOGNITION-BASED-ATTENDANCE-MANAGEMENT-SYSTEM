package Server_Client;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.*;
import java.net.*;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.sql.rowset.CachedRowSet;
import javax.swing.Box;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.Timer;

/**
 *
 * @author Ray24
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
   Socket s=null;
   ObjectInputStream ois=null;
   ObjectOutputStream oos=null;
    BufferedImage img_user,img_pass;
    String host="localhost";
    
    int port=1444;
    public Login(){
        try {
            this.img_user = ImageIO.read(getClass().getResource("/images/user.png"));
            this.img_pass = ImageIO.read(getClass().getResource("/images/password.png"));
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_banner = new javax.swing.JLabel();
        lbl_msg = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_userid = new JTextField() {
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                int centerPoint = (getHeight() - img_user.getHeight())/2;
                int r=getWidth()-img_user.getWidth();
                g.drawImage(img_user, r, centerPoint, this);
            }
        };
        ;
        txt_pass = new JPasswordField() {
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                int centerPoint = (getHeight() - img_pass.getHeight())/2;
                int r=getWidth()-img_pass.getWidth();
                g.drawImage(img_pass, r, centerPoint, this);
            }
        };
        btn_login = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmb_usertype = new javax.swing.JComboBox();
        lbl_forgot_pwd = new javax.swing.JLabel();
        btn_close = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 153));
        setName("login"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lbl_banner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images.jpg"))); // NOI18N

        lbl_msg.setText("Message");

        jLabel1.setText("User ID :");

        txt_userid.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_userid.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txt_userid.setMargin(new java.awt.Insets(2, 5, 2, 2));

        txt_pass.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btn_login.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/login.png"))); // NOI18N
        btn_login.setBorder(null);
        btn_login.setBorderPainted(false);
        btn_login.setContentAreaFilled(false);
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        btn_cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel(1).png"))); // NOI18N
        btn_cancel.setContentAreaFilled(false);
        btn_cancel.setPreferredSize(new java.awt.Dimension(55, 19));
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        jLabel2.setText("Password :");

        jLabel3.setText("User Type :");

        cmb_usertype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Admin", "Faculty", "Student" }));

        lbl_forgot_pwd.setText("<HTML><U>Forgot Password ?<U><HTML>");
        lbl_forgot_pwd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_forgot_pwdlbl_forgot_password(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbl_forgot_pwdMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbl_forgot_pwdMouseExited(evt);
            }
        });

        btn_close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Actions-application-exit-icon.png"))); // NOI18N
        btn_close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_closeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_banner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lbl_msg, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_userid, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(18, 18, 18)
                                            .addComponent(cmb_usertype, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(btn_login, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(txt_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbl_forgot_pwd, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btn_close)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbl_banner)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_userid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cmb_usertype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_login, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(lbl_msg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_forgot_pwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_close))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        // TODO add your handling code here:
        if(!cmb_usertype.getSelectedItem().equals("Admin"))
        {
            String msg=null;
        try
        {
         s=new Socket(host,port);
	 System.out.println("Connected...");
         ois=new ObjectInputStream(s.getInputStream());
	 String d=(String)ois.readObject();
	 System.out.println("ACK from Server :"+d);
         oos=new ObjectOutputStream(s.getOutputStream());
         oos.writeObject("Login");
         oos.writeObject(txt_userid.getText());
         oos.writeObject(new String(txt_pass.getPassword()));
         oos.writeObject((String) cmb_usertype.getSelectedItem());
         msg=(String)ois.readObject();
         lbl_msg.setText(msg);
         lbl_msg.setVisible(true);
        
         if(msg.equals("Success"))
        {
            if(cmb_usertype.getSelectedItem().equals("Student"))
            {
           lbl_msg.setForeground(Color.GREEN);
           final JFrame fr=this;
         String fn=(String) ois.readObject();
         String ln=(String) ois.readObject();
         String dept=(String) ois.readObject();
         CachedRowSet rs=(CachedRowSet) ois.readObject();
         int absent= (int) ois.readObject();
         int present= (int) ois.readObject();
		 Vector tt=(Vector)ois.readObject();
            //System.out.println("p="+present+",ab="+absent);
         if(rs.isBeforeFirst())
         {
             rs.next();
         }
           final  Student_home ad=new Student_home();
           //ad.st=this.st;
           ad.stuid=txt_userid.getText();
           PieChart pc=new PieChart("Overall Attendance",absent,present);
                         System.out.println(" Total Size::"+tt.size());
         Vector sub=(Vector)tt.get(0);
         Vector att=(Vector)tt.get(1);
         String row[][]=new String[att.size()][2];
            //System.out.println("att"+att.size()+" sub"+sub.size());
         for(int i=0;i<att.size();i++)
         {
         row[i][0]=""+sub.get(i);
         row[i][1]=""+att.get(i);
             //System.out.println("Row"+row[i][0]+"Roww"+row[i][1]);
         }
         String col[]={"Subject","Attendance"};
         JTable jt=new JTable(row,col);
        jt.setSize(435,200);
         jt.setVisible(true);
         
         jt.setEnabled(true);
        ad.panel_table.setLayout(new BorderLayout());
         ad.panel_table.add(jt.getTableHeader(),BorderLayout.NORTH);
         ad.panel_table.add(jt);
         
           ad.lbl_welcome.setText("Welcome "+fn+" "+ln);
           ad.lbl_dept_name.setText("Department : "+dept);
           ad.lbl_sem.setText("Semester : "+rs.getInt(2));
           ad.lbl_div.setText("Division :"+rs.getString(4));
           ad.panel_chart.setLayout(new FlowLayout());
           ad.panel_chart.add(pc);
           SwingUtilities.updateComponentTreeUI(ad.panel_chart);
           pc.setVisible(true);
           
            InputStream is=(InputStream) rs.getBinaryStream(5);
            //System.out.println(is);
            BufferedImage img=ImageIO.read(is);
            ad.lbl_img.setIcon(new ImageIcon(this.resizeImage(img, 150,150)));
            ad.s=this.s;
            ad.ois=this.ois;
            ad.oos=this.oos;
            Timer t=new Timer(1000,new ActionListener(){
           
            @Override
            public void actionPerformed(ActionEvent ae)
            {
               fr.dispose();
               
               ad.setVisible(true);
               
            }
        });
        t.start(); 
        t.setRepeats(false);
            }
        
         else if(cmb_usertype.getSelectedItem().equals("Faculty"))
            {
                
                
           lbl_msg.setForeground(Color.GREEN);
           final JFrame fr=this;
           final  Faculty_Home ad=new Faculty_Home();
         String fn=(String) ois.readObject();
         String ln=(String) ois.readObject();
         String dept=(String) ois.readObject();
         CachedRowSet rs=(CachedRowSet) ois.readObject();
         ad.deptid=(String[]) ois.readObject();
         String deptname[]=(String[]) ois.readObject();
         ad.subid=(String[]) ois.readObject();
         String subname[]=(String[]) ois.readObject();
         ad.s=this.s;
         ad.ois=this.ois;
         ad.oos=this.oos;
         if(rs.isBeforeFirst())
         {
             rs.next();
         }
           
         if(subname.length!=0)
         {
             ad.cmb_sub.removeAllItems();
             ad.cmb_sub.addItem("Select Subject");
             for(int i=0;i<subname.length;i++)
             {
                 ad.cmb_sub.addItem(subname[i]);
             }
         }
     
         if(deptname.length!=0)
         {
             ad.cmb_dept.removeAllItems();
             ad.cmb_dept.addItem("Select Subject");
             for(int i=0;i<deptname.length;i++)
             {
                 ad.cmb_dept.addItem(deptname[i]);
             }
         }
         ad.facid=txt_userid.getText();
         ad.facname=fn+" "+ln;
           ad.lbl_welcome.setText("Welcome "+fn+" "+ln);
           ad.lbl_dept_name.setText("Department : "+dept);
           //ad.lbl_sem.setText("Semester : "+rs.getInt(2));
        
            InputStream is=(InputStream) rs.getBinaryStream(3);
            BufferedImage img=null;
            if(is!=null)
            {
                img=ImageIO.read(is);
            }
            else
            {
                img = ImageIO.read(getClass().getResource("/images/not_available.jpg"));
            }
            
            ad.lbl_img.setIcon(new ImageIcon(this.resizeImage(img, 150,150)));
            Timer t=new Timer(1000,new ActionListener(){
           
            @Override
            public void actionPerformed(ActionEvent ae)
            {
               fr.dispose();
               
               ad.setVisible(true);
               
            }
        });
        t.start(); 
        t.setRepeats(false);
            }
        }
        else
        {
           lbl_msg.setForeground(Color.RED);
        }
        }
        catch(UnknownHostException|ConnectException  ex) 
        {
        JTextField xField = new JTextField();
        JTextField yField = new JTextField();
        xField.setSize(100, 30);
        yField.setSize(200, 30);
        //String u_id=null;
        //String email_id=null;
        JPanel myPanel = new JPanel();
        myPanel.setLayout(new GridLayout(2, 2));
        myPanel.setSize(400, 400);
        myPanel.add(new JLabel("Enter host name or IP address:"));
        myPanel.add(xField);
        myPanel.add(Box.createHorizontalStrut(15)); // a spacer
        myPanel.add(new JLabel("Enter port number:"));
        myPanel.add(yField);
        //myPanel.setSize(300,150);
        int result = JOptionPane.showConfirmDialog(null, myPanel,
            "Please Enter Host name and port number", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
           host=xField.getText();
           port=Integer.parseInt(yField.getText());
                
            }
        }   catch (IOException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
             lbl_msg.setText("Only Student/Faculty is allowed to login...");
             lbl_msg.setVisible(true);
             lbl_msg.setForeground(Color.RED);
        }
        SwingUtilities.updateComponentTreeUI(this);
        
    }//GEN-LAST:event_btn_loginActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        cmb_usertype.setSelectedIndex(2);
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.WHITE);
        lbl_msg.setVisible(false);
        
        SwingUtilities.updateComponentTreeUI(this);
    }//GEN-LAST:event_formWindowOpened

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        // TODO add your handling code here:
        
        cmb_usertype.setSelectedIndex(2);
        lbl_msg.setVisible(false);
        if(txt_userid.getText()!=null|txt_pass.getPassword()!=null)
        {
            txt_pass.setText("");
            txt_userid.setText("");
        }
        if(txt_userid.getText()==null&&txt_pass.getPassword()==null)
        {
            System.exit(1);
        }
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void lbl_forgot_pwdlbl_forgot_password(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_forgot_pwdlbl_forgot_password
        // TODO add your handling code here:
        //  String mail= JOptionPane.showInputDialog(this,"Enter your registered Email-Id ");
        JTextField xField = new JTextField();
        JTextField yField = new JTextField();
        xField.setSize(100, 30);
        yField.setSize(200, 30);
        String u_id=null;
        String email_id=null;
        JPanel myPanel = new JPanel();
        myPanel.setLayout(new GridLayout(2, 2));
        myPanel.setSize(400, 400);
        myPanel.add(new JLabel("User ID:"));
        myPanel.add(xField);
        myPanel.add(Box.createHorizontalStrut(15)); // a spacer
        myPanel.add(new JLabel("Registered Email ID"));
        myPanel.add(yField);
        //myPanel.setSize(300,150);
        int result = JOptionPane.showConfirmDialog(null, myPanel,
            "Please Enter UserID and registered Email ID", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            u_id=xField.getText();
            email_id=yField.getText();
        
        try{ s=new Socket(host,port);
            System.out.println("Connected...");
            ois=new ObjectInputStream(s.getInputStream());
            String d=(String)ois.readObject();
            System.out.println("ACK from Server :"+d);
            oos=new ObjectOutputStream(s.getOutputStream());
            oos.writeObject("Forgot Password");
            oos.writeObject(u_id);
            oos.writeObject(email_id);
            String msg=(String)ois.readObject();
            if(msg.equals("true"))
            {
                JOptionPane.showMessageDialog(this,"You will Receive Email Shortly");
            }
            else if(msg.equals("false"))
            {
                JOptionPane.showMessageDialog(this,"Mismatch in ID and Email");
            }
        }
        catch(UnknownHostException|ConnectException  ex) 
        {
        JTextField xField1 = new JTextField();
        JTextField yField1= new JTextField();
        xField.setSize(100, 30);
        yField.setSize(200, 30);
        //String u_id=null;
        //String email_id=null;
        JPanel myPanel1 = new JPanel();
        myPanel1.setLayout(new GridLayout(2, 2));
        myPanel1.setSize(400, 400);
        myPanel1.add(new JLabel("Enter host name or IP address:"));
        myPanel1.add(xField);
        myPanel1.add(Box.createHorizontalStrut(15)); // a spacer
        myPanel1.add(new JLabel("Enter port number:"));
        myPanel1.add(yField);
        //myPanel.setSize(300,150);
        int result1 = JOptionPane.showConfirmDialog(null, myPanel1,
            "Please Enter Host name and port number", JOptionPane.OK_CANCEL_OPTION);
        if (result1 == JOptionPane.OK_OPTION) {
           host=xField1.getText();
           port=Integer.parseInt(yField1.getText());
                
            }
        }   catch (IOException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_lbl_forgot_pwdlbl_forgot_password

    private void lbl_forgot_pwdMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_forgot_pwdMouseEntered
        // TODO add your handling code here:
        lbl_forgot_pwd.setForeground(Color.red);
    }//GEN-LAST:event_lbl_forgot_pwdMouseEntered

    private void lbl_forgot_pwdMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_forgot_pwdMouseExited
        // TODO add your handling code here:
        lbl_forgot_pwd.setForeground(Color.BLACK);
    }//GEN-LAST:event_lbl_forgot_pwdMouseExited

    private void btn_closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_closeMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btn_closeMouseClicked

  public BufferedImage resizeImage(BufferedImage im,double width,double height)
  {
    int imWidth = im.getWidth();
    int imHeight = im.getHeight();
    //System.out.println("Original (w,h): (" + imWidth + ", " + imHeight + ")");

    double widthScale = width / ((double) imWidth);
    double heightScale = height / ((double) imHeight);
    double scale = (widthScale > heightScale) ? widthScale : heightScale;

    int nWidth = (int)Math.round(imWidth* scale);
    int nHeight = (int)Math.round(imHeight* scale);

    // convert to grayscale while resizing
    BufferedImage img=new BufferedImage(nWidth, nHeight,BufferedImage.SCALE_SMOOTH);
    Graphics2D g2 = img.createGraphics();
    g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, 
                        RenderingHints.VALUE_INTERPOLATION_BILINEAR);
    g2.drawImage(im, 0, 0, nWidth, nHeight,  0, 0, imWidth, imHeight, null);  
    g2.dispose();  

    //System.out.println("Scaled gray (w,h): (" + nWidth + ", " + nHeight + ")");
    //return grayIm;
    return img;
  }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JLabel btn_close;
    private javax.swing.JButton btn_login;
    private javax.swing.JComboBox cmb_usertype;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbl_banner;
    private javax.swing.JLabel lbl_forgot_pwd;
    private javax.swing.JLabel lbl_msg;
    private javax.swing.JPasswordField txt_pass;
    private javax.swing.JTextField txt_userid;
    // End of variables declaration//GEN-END:variables
}
